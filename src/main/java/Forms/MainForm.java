package Forms;

import javax.swing.*;

import Database.DatabaseManager;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.apache.log4j.Logger;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

import java.awt.*;

public class MainForm extends JFrame {
    private JButton connect;
    private JTextField login;
    private JPasswordField password;
    private JPanel MainForm;
    private static JFrame frame;

    public static void main(String[] args) throws Exception {
        //DatabaseManager.initDatabase();
        //new MainForm();


    }
/*
    private MainForm() {
        super("Main Form");
        setContentPane(MainForm);
        frame = this;
        pack();
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setVisible(true);
        connect.addActionListener(e -> {
            System.out.println("\"" + login.getText() + "\"");
            System.out.println("\"" + new String(password.getPassword()) + "\"");
            if (login.getText().equals("") || login.getText() == null) {
                JOptionPane.showMessageDialog(getParent(), "Поле логина должно быть заполнено!", "Ошибка!", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (new String(password.getPassword()).equals("")) {
                JOptionPane.showMessageDialog(getParent(), "Поле пароля должно быть заполнено!", "Ошибка!", JOptionPane.ERROR_MESSAGE);
                return;
            }
            int userRights = DatabaseManager.checkUser(login.getText(), new String(password.getPassword()));
            password.setText("");

            if (userRights == 1) {
                frame.setVisible(false);
                new AdminForm(frame);
            } else if (userRights == 2) {
                frame.setVisible(false);
                JOptionPane.showMessageDialog(getParent(), "К сожалению, пользователи ничего делать не могут. Но вы уже в нашей системе. Поздравляем!", "Форма пользователя", JOptionPane.INFORMATION_MESSAGE);
                frame.setVisible(true);
            } else if (userRights == -1) {
                JOptionPane.showMessageDialog(getParent(), "Имя пользователя или пароль не верны!", "Ошибка!", JOptionPane.ERROR_MESSAGE);
            }
        });
    }

    {
//
//// GUI initializer generated by IntelliJ IDEA GUI Designer
//// >>> IMPORTANT!! <<<
//// DO NOT EDIT OR ADD ANY CODE HERE!
//        $$$setupUI$$$();
//    }
//
//    /**
//     * Method generated by IntelliJ IDEA GUI Designer
//     * >>> IMPORTANT!! <<<
//     * DO NOT edit this method OR call it in your code!
//     *
//     * @noinspection ALL
//     */
//    private void $$$setupUI$$$() {
//        MainForm = new JPanel();
//        MainForm.setLayout(new GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
//        MainForm.setEnabled(false);
//        connect = new JButton();
//        connect.setText("Подключиться");
//        MainForm.add(connect, new GridConstraints(2, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
//        login = new JTextField();
//        MainForm.add(login, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
//        password = new JPasswordField();
//        MainForm.add(password, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
//        final JLabel label1 = new JLabel();
//        label1.setText("Имя пользователя");
//        MainForm.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
//        final JLabel label2 = new JLabel();
//        label2.setText("Пароль");
//        MainForm.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
//    }
//
//    /**
//     * @noinspection ALL
//     */
//    public JComponent $$$getRootComponent$$$() {
//        return MainForm;
//    }

}

